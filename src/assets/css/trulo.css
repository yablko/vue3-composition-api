/*! modern-normalize v1.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
*::before,
*::after {
	box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

:root {
	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
	line-height: 1.15; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
	margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
	font-family: system-ui, -apple-system,
		/* Firefox supports this but not yet `system-ui` */ 'Segoe UI', Roboto, Helvetica, Arial,
		sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
	height: 0; /* 1 */
	color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
	-webkit-text-decoration: underline dotted;
	text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
	font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
	font-family: ui-monospace, SFMono-Regular, Consolas, 'Liberation Mono', Menlo, monospace; /* 1 */
	font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
	font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
	text-indent: 0; /* 1 */
	border-color: inherit; /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	line-height: 1.15; /* 1 */
	margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select {
	/* 1 */
	text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'] {
	-webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

/**
Restore the focus styles unset by the previous rule.
*/

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
	padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
	vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
	display: list-item;
}

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
	margin: 0;
}

button {
	background-color: transparent;
	background-image: none;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button:focus {
	outline: 1px dotted;
	outline: 5px auto -webkit-focus-ring-color;
}

fieldset {
	margin: 0;
	padding: 0;
}

ol,
ul {
	list-style: none;
	margin: 0;
	padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html,
body {
	font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
		'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
		'Segoe UI Symbol', 'Noto Color Emoji'; /* 1 */
	line-height: 1.5; /* 2 */
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
	box-sizing: border-box; /* 1 */
	border-width: 0; /* 2 */
	border-style: solid; /* 2 */
	border-color: #e4e4e7; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
	border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
	border-style: solid;
}

textarea {
	resize: vertical;
}

input::-moz-placeholder,
textarea::-moz-placeholder {
	color: #a1a1aa;
}

input:-ms-input-placeholder,
textarea:-ms-input-placeholder {
	color: #a1a1aa;
}

input::placeholder,
textarea::placeholder {
	color: #a1a1aa;
}

button {
	cursor: pointer;
}

table {
	border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	font-size: inherit;
	font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
	color: inherit;
	text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
	padding: 0;
	line-height: inherit;
	color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
	font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',
		'Courier New', monospace;
}

/**
 * Make replaced elements `display: block` by default as that's
 * the behavior you want almost all of the time. Inspired by
 * CSS Remedy, with `svg` added as well.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
	display: block;
	vertical-align: middle;
}

/**
 * Constrain images and videos to the parent width and preserve
 * their instrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
	max-width: 100%;
	height: auto;
}

/**
	 * CARDS
	 */

.card {
	--bg-opacity: 1;
	background-color: rgba(255, 255, 255, var(--bg-opacity));
	--border-opacity: 1;
	border-color: rgba(161, 161, 170, var(--border-opacity));
	border-radius: 0.25rem;
	border-bottom-width: 1px;
	cursor: pointer;
	line-height: 1.375;
	margin-top: 0.5rem;
	margin-bottom: 0.5rem;
}

/**
	 * LISTS
	 */

.card:hover {
	--bg-opacity: 1;
	background-color: rgba(244, 244, 245, var(--bg-opacity));
}

.list {
	/* size */
	flex-shrink: 0;
	margin-bottom: 2.5rem;
	padding: 0.75rem;
	padding-bottom: 0.5rem;
	width: 100%;
	/* colors */
	--bg-opacity: 1;
	background-color: rgba(228, 228, 231, var(--bg-opacity));
	--text-opacity: 1;
	color: rgba(39, 39, 42, var(--text-opacity));
	/* special stuff */
	border-radius: 0.5rem;
	box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

/**
	 * BUTTONS
	 */

.btn {
	--border-opacity: 1;
	border-color: rgba(82, 82, 91, var(--border-opacity));
	border-radius: 0.25rem;
	border-bottom-width: 1px;
	font-weight: 600;
	padding-top: 0.25rem;
	padding-bottom: 0.25rem;
	padding-left: 0.75rem;
	padding-right: 0.75rem;
	--text-opacity: 1;
	color: rgba(255, 255, 255, var(--text-opacity));
	text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.35);
}

.btn-green {
	--bg-opacity: 1;
	background-color: rgba(16, 185, 129, var(--bg-opacity));
}

.btn-green:hover,
.btn-green:active {
	--bg-opacity: 1;
	background-color: rgba(52, 211, 153, var(--bg-opacity));
}

@media (min-width: 420px) {
	.list {
		margin-left: 1rem;
		margin-right: 1rem;
		margin-bottom: 0;
		width: 20rem;
	}
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
	--space-y-reverse: 0;
	margin-top: calc(0.5rem * calc(1 - var(--space-y-reverse)));
	margin-bottom: calc(0.5rem * var(--space-y-reverse));
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
	--space-y-reverse: 0;
	margin-top: calc(1rem * calc(1 - var(--space-y-reverse)));
	margin-bottom: calc(1rem * var(--space-y-reverse));
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
	--divide-y-reverse: 0;
	border-top-width: calc(1px * calc(1 - var(--divide-y-reverse)));
	border-bottom-width: calc(1px * var(--divide-y-reverse));
}

.divide-gray-200 > :not([hidden]) ~ :not([hidden]) {
	--divide-opacity: 1;
	border-color: rgba(228, 228, 231, var(--divide-opacity));
}

.bg-black {
	--bg-opacity: 1;
	background-color: rgba(0, 0, 0, var(--bg-opacity));
}

.bg-white {
	--bg-opacity: 1;
	background-color: rgba(255, 255, 255, var(--bg-opacity));
}

.bg-gray-500 {
	--bg-opacity: 1;
	background-color: rgba(113, 113, 122, var(--bg-opacity));
}

.bg-red-400 {
	--bg-opacity: 1;
	background-color: rgba(248, 113, 113, var(--bg-opacity));
}

.bg-yellow-300 {
	--bg-opacity: 1;
	background-color: rgba(252, 211, 77, var(--bg-opacity));
}

.bg-yellow-400 {
	--bg-opacity: 1;
	background-color: rgba(251, 191, 36, var(--bg-opacity));
}

.bg-green-300 {
	--bg-opacity: 1;
	background-color: rgba(110, 231, 183, var(--bg-opacity));
}

.bg-green-400 {
	--bg-opacity: 1;
	background-color: rgba(52, 211, 153, var(--bg-opacity));
}

.bg-blue-400 {
	--bg-opacity: 1;
	background-color: rgba(96, 165, 250, var(--bg-opacity));
}

.bg-purple-300 {
	--bg-opacity: 1;
	background-color: rgba(196, 181, 253, var(--bg-opacity));
}

.bg-purple-400 {
	--bg-opacity: 1;
	background-color: rgba(167, 139, 250, var(--bg-opacity));
}

.bg-purple-500 {
	--bg-opacity: 1;
	background-color: rgba(139, 92, 246, var(--bg-opacity));
}

.bg-gradient-to-r {
	background-image: linear-gradient(to right, var(--gradient-color-stops));
}

.from-red-400 {
	--gradient-from-color: #f87171;
	--gradient-color-stops: var(--gradient-from-color),
		var(--gradient-to-color, rgba(248, 113, 113, 0));
}

.from-teal-400 {
	--gradient-from-color: #4fd1c5;
	--gradient-color-stops: var(--gradient-from-color),
		var(--gradient-to-color, rgba(79, 209, 197, 0));
}

.to-blue-400 {
	--gradient-to-color: #60a5fa;
}

.to-pink-400 {
	--gradient-to-color: #f472b6;
}

.bg-opacity-40 {
	--bg-opacity: 0.4;
}

.bg-opacity-60 {
	--bg-opacity: 0.6;
}

.bg-opacity-70 {
	--bg-opacity: 0.7;
}

.hover\:bg-opacity-100:hover {
	--bg-opacity: 1;
}

.focus\:bg-opacity-100:focus {
	--bg-opacity: 1;
}

.border-gray-200 {
	--border-opacity: 1;
	border-color: rgba(228, 228, 231, var(--border-opacity));
}

.border-gray-300 {
	--border-opacity: 1;
	border-color: rgba(212, 212, 216, var(--border-opacity));
}

.rounded {
	border-radius: 0.25rem;
}

.rounded-lg {
	border-radius: 0.5rem;
}

.rounded-full {
	border-radius: 9999px;
}

.rounded-t {
	border-top-left-radius: 0.25rem;
	border-top-right-radius: 0.25rem;
}

.border-t {
	border-top-width: 1px;
}

.border-b {
	border-bottom-width: 1px;
}

.border-l {
	border-left-width: 1px;
}

.block {
	display: block;
}

.flex {
	display: flex;
}

.table {
	display: table;
}

.hidden {
	display: none;
}

.flex-col {
	flex-direction: column;
}

.items-start {
	align-items: flex-start;
}

.items-center {
	align-items: center;
}

.justify-center {
	justify-content: center;
}

.flex-shrink-0 {
	flex-shrink: 0;
}

.font-semibold {
	font-weight: 600;
}

.font-bold {
	font-weight: 700;
}

.h-2 {
	height: 0.5rem;
}

.h-4 {
	height: 1rem;
}

.h-5 {
	height: 1.25rem;
}

.h-6 {
	height: 1.5rem;
}

.h-7 {
	height: 1.75rem;
}

.h-screen {
	height: 100vh;
}

.text-xs {
	font-size: 0.75rem;
	line-height: 1rem;
}

.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}

.text-base {
	font-size: 1rem;
	line-height: 1.5rem;
}

.leading-6 {
	line-height: 1.5rem;
}

.leading-none {
	line-height: 1;
}

.list-disc {
	list-style-type: disc;
}

.mx-auto {
	margin-left: auto;
	margin-right: auto;
}

.ml-0 {
	margin-left: 0;
}

.mt-1 {
	margin-top: 0.25rem;
}

.mr-1 {
	margin-right: 0.25rem;
}

.mb-1 {
	margin-bottom: 0.25rem;
}

.mt-2 {
	margin-top: 0.5rem;
}

.mr-2 {
	margin-right: 0.5rem;
}

.ml-2 {
	margin-left: 0.5rem;
}

.ml-0\.5 {
	margin-left: 0.125rem;
}

.mt-1\.5 {
	margin-top: 0.375rem;
}

.mr-1\.5 {
	margin-right: 0.375rem;
}

.mb-1\.5 {
	margin-bottom: 0.375rem;
}

.max-h-52 {
	max-height: 13rem;
}

.max-w-md {
	max-width: 28rem;
}

.min-h-screen {
	min-height: 100vh;
}

.opacity-50 {
	opacity: 0.5;
}

.hover\:opacity-100:hover {
	opacity: 1;
}

.outline-none {
	outline: 2px solid transparent;
	outline-offset: 2px;
}

.overflow-hidden {
	overflow: hidden;
}

.overflow-x-auto {
	overflow-x: auto;
}

.p-1 {
	padding: 0.25rem;
}

.p-2 {
	padding: 0.5rem;
}

.p-3 {
	padding: 0.75rem;
}

.p-2\.5 {
	padding: 0.625rem;
}

.py-0 {
	padding-top: 0;
	padding-bottom: 0;
}

.px-1 {
	padding-left: 0.25rem;
	padding-right: 0.25rem;
}

.py-2 {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}

.py-3 {
	padding-top: 0.75rem;
	padding-bottom: 0.75rem;
}

.px-3 {
	padding-left: 0.75rem;
	padding-right: 0.75rem;
}

.px-4 {
	padding-left: 1rem;
	padding-right: 1rem;
}

.py-6 {
	padding-top: 1.5rem;
	padding-bottom: 1.5rem;
}

.py-8 {
	padding-top: 2rem;
	padding-bottom: 2rem;
}

.py-10 {
	padding-top: 2.5rem;
	padding-bottom: 2.5rem;
}

.py-0\.5 {
	padding-top: 0.125rem;
	padding-bottom: 0.125rem;
}

.py-2\.5 {
	padding-top: 0.625rem;
	padding-bottom: 0.625rem;
}

.pt-6 {
	padding-top: 1.5rem;
}

.placeholder-white::-moz-placeholder {
	--placeholder-opacity: 1;
	color: rgba(255, 255, 255, var(--placeholder-opacity));
}

.placeholder-white:-ms-input-placeholder {
	--placeholder-opacity: 1;
	color: rgba(255, 255, 255, var(--placeholder-opacity));
}

.placeholder-white::placeholder {
	--placeholder-opacity: 1;
	color: rgba(255, 255, 255, var(--placeholder-opacity));
}

.focus\:placeholder-gray-600:focus::-moz-placeholder {
	--placeholder-opacity: 1;
	color: rgba(82, 82, 91, var(--placeholder-opacity));
}

.focus\:placeholder-gray-600:focus:-ms-input-placeholder {
	--placeholder-opacity: 1;
	color: rgba(82, 82, 91, var(--placeholder-opacity));
}

.focus\:placeholder-gray-600:focus::placeholder {
	--placeholder-opacity: 1;
	color: rgba(82, 82, 91, var(--placeholder-opacity));
}

.fixed {
	position: fixed;
}

.absolute {
	position: absolute;
}

.relative {
	position: relative;
}

.inset-0 {
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
}

.top-0 {
	top: 0;
}

.left-0 {
	left: 0;
}

.left-80 {
	left: 20rem;
}

.shadow-lg {
	box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

.shadow-inner {
	box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06);
}

.shadow-outline {
	box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.5);
}

.focus\:shadow-xl:focus {
	box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

.focus\:shadow-outline:focus {
	box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.5);
}

.fill-current {
	fill: currentColor;
}

.text-white {
	--text-opacity: 1;
	color: rgba(255, 255, 255, var(--text-opacity));
}

.text-gray-500 {
	--text-opacity: 1;
	color: rgba(113, 113, 122, var(--text-opacity));
}

.text-gray-700 {
	--text-opacity: 1;
	color: rgba(63, 63, 70, var(--text-opacity));
}

.text-gray-800 {
	--text-opacity: 1;
	color: rgba(39, 39, 42, var(--text-opacity));
}

.text-gray-900 {
	--text-opacity: 1;
	color: rgba(24, 24, 27, var(--text-opacity));
}

.text-teal-500 {
	--text-opacity: 1;
	color: rgba(56, 178, 172, var(--text-opacity));
}

.text-teal-600 {
	--text-opacity: 1;
	color: rgba(49, 151, 149, var(--text-opacity));
}

.hover\:text-gray-700:hover {
	--text-opacity: 1;
	color: rgba(63, 63, 70, var(--text-opacity));
}

.hover\:text-teal-700:hover {
	--text-opacity: 1;
	color: rgba(44, 122, 123, var(--text-opacity));
}

.w-4 {
	width: 1rem;
}

.w-5 {
	width: 1.25rem;
}

.w-6 {
	width: 1.5rem;
}

.w-8 {
	width: 2rem;
}

.w-40 {
	width: 10rem;
}

.w-full {
	width: 100%;
}

.w-screen {
	width: 100vw;
}

.z-10 {
	z-index: 10;
}

.z-20 {
	z-index: 20;
}

.transform {
	--transform-translate-x: 0;
	--transform-translate-y: 0;
	--transform-rotate: 0;
	--transform-skew-x: 0;
	--transform-skew-y: 0;
	--transform-scale-x: 1;
	--transform-scale-y: 1;
	transform: translateX(var(--transform-translate-x)) translateY(var(--transform-translate-y))
		rotate(var(--transform-rotate)) skewX(var(--transform-skew-x)) skewY(var(--transform-skew-y))
		scaleX(var(--transform-scale-x)) scaleY(var(--transform-scale-y));
}

.hover\:translate-x-1:hover {
	--transform-translate-x: 0.25rem;
}

.-skew-y-6 {
	--transform-skew-y: -6deg;
}

.transition {
	transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow,
		transform;
}

.ease-in {
	transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.duration-75 {
	transition-duration: 75ms;
}

@-webkit-keyframes spin {
	to {
		transform: rotate(360deg);
	}
}

@keyframes spin {
	to {
		transform: rotate(360deg);
	}
}

@-webkit-keyframes ping {
	75%,
	100% {
		transform: scale(2);
		opacity: 0;
	}
}

@keyframes ping {
	75%,
	100% {
		transform: scale(2);
		opacity: 0;
	}
}

@-webkit-keyframes pulse {
	50% {
		opacity: 0.5;
	}
}

@keyframes pulse {
	50% {
		opacity: 0.5;
	}
}

@-webkit-keyframes bounce {
	0%,
	100% {
		transform: translateY(-25%);
		-webkit-animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
		animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
	}

	50% {
		transform: none;
		-webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
		animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
	}
}

@keyframes bounce {
	0%,
	100% {
		transform: translateY(-25%);
		-webkit-animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
		animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
	}

	50% {
		transform: none;
		-webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
		animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
	}
}

@media (min-width: 420px) {
	.sm\:rounded-3xl {
		border-radius: 1.5rem;
	}

	.sm\:flex {
		display: flex;
	}

	.sm\:h-7 {
		height: 1.75rem;
	}

	.sm\:h-20 {
		height: 5rem;
	}

	.sm\:text-lg {
		font-size: 1.125rem;
		line-height: 1.75rem;
	}

	.sm\:leading-7 {
		line-height: 1.75rem;
	}

	.sm\:m-0 {
		margin: 0;
	}

	.sm\:mx-4 {
		margin-left: 1rem;
		margin-right: 1rem;
	}

	.sm\:mx-auto {
		margin-left: auto;
		margin-right: auto;
	}

	.sm\:mb-0 {
		margin-bottom: 0;
	}

	.sm\:max-h-36 {
		max-height: 9rem;
	}

	.sm\:max-w-xl {
		max-width: 36rem;
	}

	.sm\:p-20 {
		padding: 5rem;
	}

	.sm\:py-12 {
		padding-top: 3rem;
		padding-bottom: 3rem;
	}

	.sm\:pr-8 {
		padding-right: 2rem;
	}

	.sm\:absolute {
		position: absolute;
	}

	.sm\:w-80 {
		width: 20rem;
	}

	.sm\:-rotate-6 {
		--transform-rotate: -6deg;
	}

	.sm\:skew-y-0 {
		--transform-skew-y: 0;
	}
}

@media (min-width: 768px) {
}

@media (min-width: 1024px) {
	.lg\:bg-teal-500 {
		--bg-opacity: 1;
		background-color: rgba(56, 178, 172, var(--bg-opacity));
	}

	.lg\:bg-none {
		background-image: none;
	}

	.lg\:bg-gradient-to-r {
		background-image: linear-gradient(to right, var(--gradient-color-stops));
	}

	.lg\:from-yellow-300 {
		--gradient-from-color: #fcd34d;
		--gradient-color-stops: var(--gradient-from-color),
			var(--gradient-to-color, rgba(252, 211, 77, 0));
	}

	.lg\:to-pink-400 {
		--gradient-to-color: #f472b6;
	}
}

@media (min-width: 1280px) {
}

@media (min-width: 1536px) {
}
